웹서비스의 흐름상 서버쪽을 backend 클라이언트쪽을 frontend
full stack-frontend부터 backend까지 전부를 의미

frontend - js기능  html,css웹디자인
backend - hosting:클라이언트와 송수신하는 기능
        - db : 데이터저장기능
        - file 서버 : 대용량파일관리

()데이터 : 내 컴퓨터는 항상 데이터 통신 가능(이론상), 통신사에서 사용자 기록.

coding vs programming ?
program : 목적 달성 위해 수행되는 특정 과정, 행동들
          하드웨어적으로 메모리에 저장된 전기신호

API : application programming interface
      프로그램을 만들기 위해서 필요한 인터페이스
      (다른 사람의 것으로 어떻게 갔다 써야 하는가?)



npm start : 로컬 서버를 실행시켜서 CRA로 만든 웹코드를 볼 수 있게 해주는 명령어


swtest/src/App.js-우리가 하던 코드
let-블록지역에서 선언한 것을 전역에서 바꿀 수 없다.
var-블록지역에서 선언한 것을 전역에서 바꿀 수 있다.
const-재할당할 수 없음

high level language는 하드웨어에 직접 접근이 low level과 비교해서 낮다.

expression과 statement 구분 방법
console.log()안에 넣어봤을때 값이 undefined로 나오거나 에러가 나오면 statement. 나오면 expression(값을 가지고 있음)

class는 서로다른 오브젝트를 찍어내는 틀
Object Orient Program 객체지향프로그램

class의 5가지 핵심개념 class, object, property(variable, data), method(function), inheritance(class간의 관계)

syntax는 코드의 외형(def(파이썬)과 function(자바스크립트))
javascript에선 function과 class가 큰 차이가 존재하지 않음, class는 function을 조합해서 만듬?

class는 object를 만들어내는 틀이고 class안의 constructor가 object를 찍어낸다.
this.는 object 자기 자신을 나타내어준다.
class나 object안의 데이터를 property, function을 method라고 부름
