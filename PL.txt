(Computer) Programming Language

프로그래밍 : 프로그램을 만드는 것
(코딩 : 코드를 쓴다는 관점에서 바라본 프로그래밍)
프로그래밍 언어 : 프로그램을 만들기 위한 규칙

컴퓨터 프로그래밍 : 컴퓨터에서 작동하는 프로그램을 만드는 것
컴퓨터 : 하드웨어로 CPU, Memory, I/O(입출력) 인터페이스의 3요소를 모두 갖춘 기계
컴퓨터 프로그램(소프트웨어) : 메모리에 전기신호로 저장되어 I/O를 통해 CPU로 실행되는 것

--------
언어선택 : JavaScript

0. 세팅 (프로그래밍 환경)
HW : 컴퓨터
SW (OS 제외, 추가 application)
  0) 컴파일러/인터프리터 : 코드를 실행시켜주는 프로그램 / node.js
  1) 코드에디터 : (색깔을 구별하여) 편리하게 코드를 작성하게 해주는 프로그램 / atom
    * Formatting : prettier - atom
  2) VCS(Version Control System) : 코드를 버전별로 관리해주는 프로그램 / git
      - Github : 내 코드를 (클라우드에) 저장해주는 웹사이트(웹서비스)
      - Github Desktop : 내 컴퓨터의 git 폴더(git로 관리되는 폴더)를 github에 쉽게
                업로드/다운로드 하게 해주는 프로그램

* 터미널 사용법 (OS가 제공하는 기본 프로그램) : CLI (command line interface <-> graphical user interaface)
cd : 현재 작업하는 위치를 바꿔주는 명령어
dir : directory, 파일 및 디렉토리 안의 목록을 보여주는 명령어
-> 무한루프 발생시, ctrl + c 혹은 ctrl + z로 강제종료

-> 세팅이 완료된 후, 가장 기본적인 print code를 실행 / console.log()

1. Data & Operation
     Data : number, string, boolean (+collection(array,object))
     Operation : 산술연산(+,-,*,/), 비교연산(<,>,<=,!=...,) -> 결과 데이터가 boolean, 논리연산(&&-and ,||-or, !-not)
2. Variable ( <- Collection )
     data를 저장하기 위해 variable 사용
     Variable. 1단계 : declaration(선언) -> 변수를 만듦
               2단계 : assignment(할당) -> 데이터를 변수에 지정해줌(넣어줌)
               선언은 한번만 가능하지만 할당을 여러번 할 수 있다(재할당 가능)

     Collection. : array(배열), Object(객체)
                   array->number index로 되어 있음(index는 element를 구분하는 기준)
                   Object->name index로 되어 있음(index가 숫자가 아님)
                   index를 key라고 부름 : (key:value 페어)
3. Control
     코드 흐름을 조절(설계-Design)해준다.
     - Branch () : 특정 요건(조건)을 Boolean값으로 평가하여(바탕으로) case에 따른 결과(코드)가 실행되도록(도출되도록) 만듦
      if, else if, else, switch
     - Loop () : 같은 작업을 일정한 요건(조건)이 false가 될 때까지 반복함
     while, for
       * break : loop을 빠져나가줌
     - Exception  : 에러 처리(고급 테크닉)
     try~catch,finally

Expression
      그 자체로 값(value)을 가지고 있는(산출해내는) 코드
      예)3, 5+5, true
  * false와 동치인 데이터(JS) : 0, "", false, undefined, null

Statement
      그 자체로 값(value)을 가지고 있지는 않지만 일(작업)을 수행하는 능력을 갖고 있는 코드


Scope (global, local)
      variable이 활용될 수 있는 공간
      예) JS의 if(){}에서 {}안에 있는 공간(수식)은 local scope, 전체 코드에서는 global scope라 부름

Algorithm
      어떠한 일을 해결하기 위한, 조건에 따른 단계별 방식
      순서도 : 알고리즘을 표현한 그림


4. Function
* function과 program(작은 프로그램 개념)
  * A function is a subprogram designed to perform a particular task.
   -Function은 프로그램과 비슷한 개념으로 parameter를 input하면
   return value가 output되게 만들어주는 기능(Work, Process)을 한다.
   - 프로그램은 하나 이상의 function으로 구성되어있고, 하나의 프로그램이
   다른프로그램 내에서 function의 역할을 할수있다 -> 모듈화 (modularization)

   Function Objects.
   Functions are function objects. In JavaScript, anything that is not a primitive type ( undefined, null,boolean, number, or string) is an object. Objects in JavaScript are extremely versatile. Because of this, we can even pass a function as a parameter into another function.

* function의 구조
  - 구성요소 : parameter, return value, name, work-code, scope
   - 선언(Make) - Javascript  : statement
                      function funcName(parameter){
                          코드
                          return 'expression'(return value)
                       }
   - 사용/호출(Use) : expression

'function'()는 return value가 있으면 expression

   module : 하나의 단계를 수행하는 최소 단위의 프로그램


7. advanced
  변수 선언이 3가지 방법
    var : 전역변수globa variable, scope에 구에받지 않고 어디서나 접근 가능
    let : 지역변수local variable, scope에 구에받음
    const : reassign이 안됨(보안, 바뀌지 않는 정보)


-------
프로그램/코드의 평가 단계
1. 기능 수행
2. 성능 / 효율 증대
- 시간 감소(프로그램 구동 시간)
- 공간 감소 (차지하는 메모리 용량)
- 가독성 증대 -> 개발자 입장에서, 유지/보수/개선/추가 등에 좋다.
  - 명확한 변수명 : 변수명을 보면 그 변수가 포함할 데이터의 성격이 명확히 드러나야함
  - 짧은 코드(80%?) : 스크롤압박이 적고, 많은 경우짧은 코드가 시간/공간도 감소시킴.
  - 재사용성(reusability)/모듈화 : 코드의 로직과, I/O부분이 명확히 분리되면,
    해당 코드가 하나의 모듈이 되어, 다른 환경과 상황에도 코드를 사용할 수 있다.
3. 보안


--- Tip
CamelCasing : 합쳐진 단어들에서 두번째 단어 앞 글자를 대문자로 적음

if문 구조에서, 조건 부분에는 반드시 expression이 들어가고,
scope 코드에는 주로 statement가 들어가 있다.

만일 if문 안에 특정 값이 넣어져 있으면 그 값이 expression, 조건식과 같은 수식이
들어 있으면 그것은 statement

prettier : 정해진 규칙에 따라 코드를 특정하게 정리해주 도구

return value - return된 데이터

-url 주소
 web-is-tool.firebaseapp.com
 web-is-tool.web.app

 notion.so
 android형은 별로?

 javascript에서 {}는 코드를 의미
